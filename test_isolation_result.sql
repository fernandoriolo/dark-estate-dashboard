-- ==================================================
-- TESTE DO ISOLAMENTO DE DADOS
-- ==================================================

-- 1. MOSTRAR CONTEXTO ATUAL
SELECT 
  'üîç CONTEXTO ATUAL' as section,
  auth.uid() as current_user_id,
  up.full_name as current_user_name,
  up.role as current_user_role,
  public.get_user_role() as function_role_result
FROM public.user_profiles up
WHERE up.id = auth.uid();

-- 2. DADOS QUE O USU√ÅRIO ATUAL DEVERIA VER (SEM RLS)
SELECT 
  'üìã LEADS SEM FILTRO RLS (BYPASS)' as section,
  l.id,
  l.name,
  l.user_id,
  up.full_name as owner_name,
  up.role as owner_role,
  CASE 
    WHEN l.user_id = auth.uid() THEN '‚úÖ PR√ìPRIO'
    WHEN l.user_id IS NULL THEN '‚ö†Ô∏è √ìRF√ÉO'
    ELSE '‚ùå DE OUTRO USU√ÅRIO'
  END as ownership_status
FROM public.leads l
LEFT JOIN public.user_profiles up ON l.user_id = up.id
ORDER BY l.created_at DESC;

-- 3. DADOS QUE O USU√ÅRIO ATUAL V√ä COM RLS (REAL)
-- (Este comando mostra apenas o que o RLS permite ver)
SELECT 
  'üîí LEADS COM RLS ATIVO' as section,
  COUNT(*) as total_visible_leads,
  string_agg(name, ', ') as visible_lead_names
FROM public.leads;

-- 4. TESTE DE INSER√á√ÉO COM USER_ID AUTOM√ÅTICO
SELECT 
  'üß™ TESTE DE INSER√á√ÉO' as section,
  'Usu√°rio logado: ' || COALESCE(auth.uid()::text, 'NULL') as current_user_test;

-- 5. DISTRIBUI√á√ÉO DE DADOS POR USU√ÅRIO (APENAS ADMIN V√ä TUDO)
SELECT 
  'üìä DISTRIBUI√á√ÉO TOTAL (S√ì ADMIN V√ä)' as section,
  up.full_name as usuario,
  up.role,
  COUNT(DISTINCT l.id) as leads_count,
  COUNT(DISTINCT p.id) as properties_count,
  COUNT(DISTINCT c.id) as contracts_count
FROM public.user_profiles up
LEFT JOIN public.leads l ON l.user_id = up.id
LEFT JOIN public.properties p ON p.user_id = up.id  
LEFT JOIN public.contracts c ON c.created_by = up.id
GROUP BY up.id, up.full_name, up.role
ORDER BY up.role, up.full_name;

-- 6. VERIFICAR POL√çTICAS ATIVAS
SELECT 
  'üõ°Ô∏è POL√çTICAS RLS ATIVAS' as section,
  tablename,
  policyname,
  cmd as operation
FROM pg_policies 
WHERE tablename IN ('leads', 'properties', 'contracts')
ORDER BY tablename, cmd;

-- 7. SIMULA√á√ÉO DE TESTE POR ROLE
SELECT 
  'üé≠ SIMULA√á√ÉO COMPORTAMENTO POR ROLE' as section,
  CASE 
    WHEN public.get_user_role() = 'corretor' THEN 
      'üë§ CORRETOR: Deve ver apenas seus pr√≥prios dados'
    WHEN public.get_user_role() = 'gestor' THEN 
      'üëî GESTOR: Deve ver dados de todos os corretores'
    WHEN public.get_user_role() = 'admin' THEN 
      'üëë ADMIN: Deve ver absolutamente tudo'
    ELSE
      '‚ùì ROLE DESCONHECIDO: ' || public.get_user_role()
  END as expected_behavior;

-- 8. INSTRU√á√ïES DE TESTE MANUAL
SELECT 
  'üìù INSTRU√á√ïES DE TESTE' as section,
  'Execute os seguintes testes:
1. Login como CORRETOR 1 ‚Üí Criar lead ‚Üí Deve ver apenas esse lead
2. Login como CORRETOR 2 ‚Üí N√ÉO deve ver o lead do CORRETOR 1
3. Login como GESTOR ‚Üí Deve ver leads de ambos corretores
4. Login como ADMIN ‚Üí Deve ver tudo + gerenciar usu√°rios' as manual_tests; 