// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vitiqschibbontjwhiim.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZpdGlxc2NoaWJib250andoaWltIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MTk4MzQsImV4cCI6MjA2NTQ5NTgzNH0.kDoZJsC1Y2Hg_8E8OMnOzhcVIw0P6u_ehN9fKzmmdX4";

console.log('üîß Configura√ß√£o do Supabase:');
console.log('URL:', SUPABASE_URL);
console.log('Key (primeiros 50 chars):', SUPABASE_PUBLISHABLE_KEY.substring(0, 50) + '...');

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    storageKey: 'supabase-auth-token',
    autoRefreshToken: true,
    detectSessionInUrl: true
  },
  global: {
    headers: {
      'X-Client-Info': 'lovable-project'
    }
  }
});

// Fun√ß√£o para autentica√ß√£o an√¥nima para desenvolvimento
export const ensureAuthenticated = async () => {
  const { data: { user } } = await supabase.auth.getUser();
  
  if (!user) {
    // Fazer login an√¥nimo para desenvolvimento
    const { data, error } = await supabase.auth.signInAnonymously();
    if (error) {
      console.error('‚ùå Erro na autentica√ß√£o an√¥nima:', error);
    } else {
      console.log('‚úÖ Autentica√ß√£o an√¥nima realizada com sucesso');
    }
    return data;
  }
  
  return { user };
};

// Teste b√°sico de conectividade
supabase.from('properties').select('count', { count: 'exact', head: true })
  .then(({ error, count }) => {
    if (error) {
      console.error('‚ùå Erro na inicializa√ß√£o do Supabase:', error);
    } else {
      console.log('‚úÖ Supabase inicializado com sucesso. Propriedades encontradas:', count);
    }
  });
