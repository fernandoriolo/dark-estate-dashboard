// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use variáveis de ambiente para evitar expor secrets no bundle
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY as string;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  // Falha explícita em desenvolvimento se envs estiverem ausentes
  console.error('Configuração do Supabase ausente. Defina VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY no arquivo .env.local');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    storageKey: 'supabase-auth-token',
    autoRefreshToken: true,
    detectSessionInUrl: true
  },
  global: {
    headers: {
      'X-Client-Info': 'lovable-project'
    }
  }
});

// Função para autenticação anônima para desenvolvimento
export const ensureAuthenticated = async () => {
  const { data: { user } } = await supabase.auth.getUser();
  
  if (!user) {
    // Fazer login anônimo para desenvolvimento
    const { data, error } = await supabase.auth.signInAnonymously();
    if (error) {
      console.error('❌ Erro na autenticação anônima:', error);
    } else {
      console.log('✅ Autenticação anônima realizada com sucesso');
    }
    return data;
  }
  
  return { user };
};

// Teste básico de conectividade (silencioso caso falhe em dev)
supabase
  .from('properties')
  .select('count', { count: 'exact', head: true })
  .then(({ error, count }) => {
    if (error) {
      console.warn('Supabase ainda não acessível ou sem permissões para properties.');
    } else {
      console.log('Supabase inicializado. Propriedades encontradas:', count);
    }
  });
