import { useState, useEffect, useRef } from 'react';

/**
 * Hook para detectar quando a p√°gina perde/ganha visibilidade
 * √ötil para evitar opera√ß√µes custosas quando a aba n√£o est√° ativa
 */
export const usePageVisibility = () => {
  const [isVisible, setIsVisible] = useState(!document.hidden);
  const wasHiddenRef = useRef(false);
  const justBecameVisibleRef = useRef(false);

  useEffect(() => {
    const handleVisibilityChange = () => {
      const nowVisible = !document.hidden;
      
      // Se estava oculta e agora est√° vis√≠vel
      if (wasHiddenRef.current && nowVisible) {
        console.log('üîÑ P√°gina voltou a ficar vis√≠vel ap√≥s estar oculta');
        setJustBecameVisible(true);
        
        // Reset o flag ap√≥s um delay para permitir re-inicializa√ß√µes necess√°rias
        setTimeout(() => {
          setJustBecameVisible(false);
        }, 1000);
      }
      
      wasHiddenRef.current = !nowVisible;
      setIsVisible(nowVisible);
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);

    // Cleanup
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
  }, []);

  // Usar state ao inv√©s de ref para justBecameVisible ser reativo
  const [justBecameVisible, setJustBecameVisible] = useState(false);
  
  return { 
    isVisible, 
    justBecameVisible,
    wasHidden: wasHiddenRef.current 
  };
};
